package com.telegrambot.cyclebot.bot.command;

import com.telegrambot.cyclebot.service.CycleService;
import lombok.AllArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.extensions.bots.commandbot.commands.IBotCommand;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.bots.AbsSender;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

import static com.telegrambot.cyclebot.utils.TelegramMessageSender.sendMessage;

@Service
@AllArgsConstructor
@Slf4j
public class ChangeStartDateCommand implements IBotCommand {

    private final CycleService cycleService;

    @Override
    public String getCommandIdentifier() {
        return "changeperiod";
    }

    @Override
    public String getDescription() {
        return "–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ —Ü–∏–∫–ª–∞ (—Ñ–æ—Ä–º–∞—Ç: /changeperiod –î–î.–ú–ú.–ì–ì–ì–ì)";
    }

    @Override
    public void processMessage(AbsSender absSender, Message message, String[] strings) {

        Long chatId = message.getChatId();
        SendMessage answer = new SendMessage();
        answer.setChatId(chatId);

        try {
            if(strings.length == 0) {
                answer.setText("""
                        üîÑ –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ —Ü–∏–∫–ª–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:
                        
                        /changeperiod –î–î.–ú–ú.–ì–ì–ì–ì
                        
                        üìù –ü—Ä–∏–º–µ—Ä—ã:
                        /changeperiod 15.10.2024
                        /changeperiod 01.11.2024
                        
                        üí° –¢–µ–∫—É—â—É—é –¥–∞—Ç—É –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å –ø–æ–º–æ—â—å—é /status""");
            } else {
                LocalDate newStartDate = parseDate(strings[0]);
                String result = cycleService.changeCycleStartDate(chatId, newStartDate);
                answer.setText(result);
            }
        } catch (DateTimeParseException e) {
            answer.setText("""
                    ‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã!
                    
                    üìÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: –î–î.–ú–ú.–ì–ì–ì–ì
                    
                    üí° –ü—Ä–∏–º–µ—Ä—ã:
                    /changeperiod 15.10.2024
                    /changeperiod 01.11.2024""");
        } catch (Exception e) {
            log.error("Error changing period start date", e);
            answer.setText("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞—Ç—ã. –°–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /startperiod —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ.");
        }

        sendMessage(answer, absSender);
    }
    private LocalDate parseDate(String dateStr) throws DateTimeParseException {
        return LocalDate.parse(dateStr, DateTimeFormatter.ofPattern("dd.MM.yyyy"));
    }
}
