package com.telegrambot.cyclebot.bot.command;

import com.telegrambot.cyclebot.service.SymptomService;
import lombok.AllArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.extensions.bots.commandbot.commands.IBotCommand;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.bots.AbsSender;

import static com.telegrambot.cyclebot.utils.TelegramMessageSender.sendMessage;

@Service
@AllArgsConstructor
@Slf4j
public class SymptomCommand implements IBotCommand {

    private final SymptomService symptomService;

    @Override
    public String getCommandIdentifier() {
        return "symptom";
    }

    @Override
    public String getDescription() {
        return "–î–æ–±–∞–≤–∏—Ç—å —Å–∏–º–ø—Ç–æ–º—ã (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /symptom [—Ç–∏–ø] [–∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å])";
    }

    @Override
    public void processMessage(AbsSender absSender, Message message, String[] strings) {
        SendMessage answer = new SendMessage();
        answer.setChatId(message.getChatId());

        if(strings.length < 2) {
            answer.setText("""
                    üìù –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∏–º–ø—Ç–æ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:
                    /symptom [—Ç–∏–ø] [–∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å]
                    
                    üéØ –¢–∏–ø—ã —Å–∏–º–ø—Ç–æ–º–æ–≤:
                    - –≥–æ–ª–æ–≤–Ω–∞—è_–±–æ–ª—å
                    - –±–æ–ª—å_–≤_–∂–∏–≤–æ—Ç–µ  
                    - —Ç–æ—à–Ω–æ—Ç–∞
                    - —É—Å—Ç–∞–ª–æ—Å—Ç—å
                    - –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
                    
                    üìä –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å:
                    - –Ω–∏–∑–∫–∞—è
                    - —Å—Ä–µ–¥–Ω—è—è
                    - –≤—ã—Å–æ–∫–∞—è
                    
                    üí° –ü—Ä–∏–º–µ—Ä: /symptom –≥–æ–ª–æ–≤–Ω–∞—è_–±–æ–ª—å —Å—Ä–µ–¥–Ω—è—è""");
        } else {
            String symptomType = strings[0];
            String severity = strings[1];
            String result = symptomService
        }
        sendMessage(answer, absSender);
    }
}
