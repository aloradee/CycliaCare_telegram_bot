package com.telegrambot.cyclebot.bot.command;

import lombok.AllArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.extensions.bots.commandbot.commands.IBotCommand;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.bots.AbsSender;

import static com.telegrambot.cyclebot.utils.TelegramMessageSender.sendMessage;

@Service
@AllArgsConstructor
@Slf4j
public class HelpCommand implements IBotCommand {

    @Override
    public String getCommandIdentifier() {
        return "help";
    }

    @Override
    public String getDescription() {
        return "–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞";
    }

    @Override
    public void processMessage(AbsSender absSender, Message message, String[] strings) {
        SendMessage answer = new SendMessage();
        answer.setChatId(message.getChatId());
        answer.setText("""
                üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
                
                üîπ /start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
                üîπ /startperiod [–¥–∞—Ç–∞] - –ù–∞—á–∞—Ç—å —Ü–∏–∫–ª (—Ñ–æ—Ä–º–∞—Ç: –î–î.–ú–ú.–ì–ì–ì–ì)
                üîπ /status - –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Ü–∏–∫–ª–∞
                üîπ /symptom - –î–æ–±–∞–≤–∏—Ç—å —Å–∏–º–ø—Ç–æ–º—ã
                üîπ /calendar - –ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å–æ–±—ã—Ç–∏–π
                üîπ /history - –ò—Å—Ç–æ—Ä–∏—è —Ü–∏–∫–ª–æ–≤
                üîπ /feedback - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
                üîπ /help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
                
                üí° –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
                /startperiod 15.12.2024
                /startperiod (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É)
                /symptom –≥–æ–ª–æ–≤–Ω–∞—è_–±–æ–ª—å —Å—Ä–µ–¥–Ω—è—è
                /feedback –û—Ç–ª–∏—á–Ω—ã–π –±–æ—Ç!
                
                ‚ùì –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /feedback""");

        sendMessage(answer, absSender);
    }
}
